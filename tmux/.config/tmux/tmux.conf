#!/hint/bash
# use 256 color terminal
# 官方建议 screen-256color
# 但似乎 xterm-256color 才支持斜体：https://superuser.com/questions/1514762/italics-work-everywhere-except-in-less1
# 超链接不支持：https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda
set -g default-terminal "tmux-256color"

# 启用 RGB 和斜体支持
# https://gist.github.com/XVilka/8346728
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-rgb-colour
# https://github.com/tmux/tmux/issues/1202
# set -as terminal-overrides ',xterm*:RGB,xterm*:sitm=\E[3m'
# 启用上划线和 RGB 支持
set -as terminal-features ",xterm*:RGB,xterm*:overline"

# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display 'tmux.conf sourced'

# boost history
set -g history-limit 5000

# set terminal title
set -g set-titles on

# enable mouse support
set -g mouse on

# https://www.reddit.com/r/tmux/comments/cpvd02/can_i_pass_only_mousescroll_to_shell/
# Basically, on a wheelup event:  
#   if mouse is enabled, send the mouse event,  
#   else if we're in an alternate screen program, send the up key,  
#   else if pane is in copy mode, send the mouse event,  
#   else put the current pane into copy mode and send the mouse event.  
# Nested ifs are not fun.  
bind -n WheelUpPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" "if-shell -Ft= '#{alternate_on}' 'send-keys -t= up' 'if-shell -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"run fcitx5-remote\\\\ -c; select-pane -t=; copy-mode -e; send-keys -M\"'"
# On a wheeldown event, if we're in an alternate screen program, send the down  
# key, else, just send the mouse event  
bind -n WheelDownPane if-shell -Ft= "#{alternate_on}" "send-keys -t= down" "select-pane -t= \; send-keys -M"

# set border style
set -g pane-border-lines double

# https://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux
#set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour237'
set -g window-active-style 'fg=colour255,bg=black'

# use alt-arrow to switch panes
# bind -n M-b  select-pane -L
# bind -n M-f  select-pane -R
# bind -n M-p  select-pane -U
# bind -n M-n  select-pane -D

# use shift-arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# -- emacs style keymap --
# use C-z as prefix, and C-z C-z for raw C-z
set -g prefix '⹝'   # a character that I think I will never use
unbind-key C-z
bind-key C-z send-key "C-z" # send-prefix will send ⹝

# switch IME if needed
bind-key -n 'C-z' switchc -Tprefix \; run "fcitx5-remote -c"
# bind-key -n MouseDrag1Pane run "fcitx5-remote -c" \; copy-mode
bind-key -T copy-mode -n MouseDrag1Pane run "fcitx5-remote -c" \; select-pane \; send-keys -X begin-selection

# split window
unbind '"'
unbind '%'
bind-key '0' kill-pane
bind-key '2' split-window -c "#{pane_current_path}"
bind-key '3' split-window -h -c "#{pane_current_path}"

# kill session
bind-key 'k' kill-session

# super clear
bind-key C-l 'send-keys -R; clear-history'

# for zce.zsh
# bind-key 'j' send-keys C-x j

# --- tpm ---
# List of plugins

set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-yank'

# set theme
set -g @themepack 'powerline/block/cyan'
set -g @themepack-status-left-area-left-prefix '#{?client_prefix,#[reverse]^Z#[noreverse] ,}'

# set logging path
set -g @logging-path "~/.local/share/tmux/logging/"

# don't jump to bottom when copy finished
set -g @yank_action 'copy-pipe'

# search files with line number
set -g "@copycat_search_C-f" "(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*(:[0-9]+(:[0-9]+)?)?"
bind-key 'C-a' copy-mode \; send -X search-backward "(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*(:[0-9]+(:[0-9]+)?)?"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.local/share/tmux/plugins"
run -b '~/.local/share/tmux/plugins/tpm/tpm'
