#compdef bat

autoload -U is-at-least

_bat() {
  typeset -A opt_args
  typeset -a _arguments_options
  local ret=1

  if is-at-least 5.2; then
    _arguments_options=(-s -S -C)
  else
    _arguments_options=(-s -C)
  fi

  local context curcontext="$curcontext" state line
  _arguments \
    "${_arguments_options[@]}" \
    {-l+,--language=}'[Set the language for syntax highlighting.]' \
    {*-H+,*--highlight-line=}'[Highlight the given line.]' \
    '--tabs=[Set the tab width to T spaces.]' \
    '--wrap=[Specify the text-wrapping mode (default: auto).]: :(auto never character)' \
    '--terminal-width=[Explicitly set the width of the terminal instead of determining it automatically. If prefixed with '\''+'\'' or '\''-'\'', the value will be treated as an offset to the actual terminal width. See also: '\''--wrap'\''.]' \
    '--color=[When to use colors (default: auto).]: :(auto never always)' \
    '--italic-text=[Use italics in output (default: never).]: :(always never)' \
    '--decorations=[When to show the decorations (default: auto).]: :(auto never always)' \
    '--paging=[Specify when to use the pager (default: auto).]: :(auto never always)' \
    '--pager=[Determine which pager to use.]:pager: _command_names -e' \
    {*-m+,*-map-syntax=}'[Map a file extension or name to an existing syntax.]' \
    '--theme=[Set the color theme for syntax highlighting.]: :_bat_themes' \
    '--style=[Comma-separated list of style elements to display (default: auto).]: : _values -s , style auto full plain changes header grid numbers snip ' \
    {*-r+,*--line-range=}'[Only print the lines from N to M.]' \
    '(-l --language)'{-A,--show-all}'[Show non-printable characters (space, tab, newline, ..).]' \
    {*-p,*--plain}'[Show plain style (alias for '\''--style=plain'\'').]' \
    {-n,--number}'[Show line numbers (alias for '\''--style=numbers'\'').]' \
    '--list-themes[Display all supported highlighting themes.]' \
    '(--list-themes)'{-L,--list-languages}'[Display all supported languages.]' \
    {-u,--unbuffered}'[POSIX-compliant unbuffered output. Option is ignored]' \
    '--no-config[Do not use the configuration file]' \
    '(-L --list-languages --list-themes)--config-file[Show path to the configuration file.]' \
    '--config-dir[Show bat'\''s configuration directory.]' \
    '--cache-dir[Show bat'\''s cache directory.]' \
    {-h,--help}'[Print this help message.]' \
    {-V,--version}'[Show version information.]' \
    "*::: :->bat" \
    && ret=0

  case $state in
    (bat)
      curcontext="${curcontext%:*:*}:bat-command-$words[1]:"
      case $words[1] in
        cache)
          _arguments \
            "${_arguments_options[@]}" \
            '--source=[Use a different directory to load syntaxes and themes from.]: :_files -/' \
            '--target=[Use a different directory to store the cached syntax and theme set.]: :_files -/' \
            {-b,--build}'[Initialize (or update) the syntax/theme cache.]' \
            {-c,--clear}'[Remove the cached syntax definitions and themes.]' \
            '--blank[Create completely new syntax and theme sets (instead of appending to the default sets).]' \
            {-h,--help}'[Prints help information]' \
            {-V,--version}'[Prints version information]' \
            && ret=0
          ;;
        "")
          _alternative \
            'command:bat commands:((cache\:"Modify the syntax-definition and theme cache"))' \
            'files:FILE -- File(s) to print / concatenate. Use '-' for standard input.:_files' \
            && ret=0
          ;;
        *)
          _arguments \
            '*::FILE -- File(s) to print / concatenate. Use '-' for standard input.:_files' \
            && ret=0
          ;;
      esac
      ;;
  esac
}

_bat_themes() {
  local -a themes
  themes=(${(f)"$(_call_program themes bat --list-themes)"})
  _describe -t themes 'themes' themes
}

_bat "$@"
